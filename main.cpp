/*********************************************************************
** Program name: Project 1
** Author: Jordan Hamilton
** Date: 10/07/2018
** Description: This program prompts the user to select a number of
** rows and columns, then creates an Board object, dynamically
** allocating a 2D array of the selected size. The user is also
** prompted to enter a starting location on the board and a number of
** moves in a simulation, then an Ant object with the provided
** coordinates and moves is created. A pointer to the Ant is passed
** to the Board, which simulates the Ant's movement on the board by
** instructing it to turn left or right based on the color of the
** tile where it's located, until the Ant has exhausted all its moves.
*********************************************************************/

#include <iostream>
#include <string>

#include "menu.hpp"
#include "Board.hpp"

using std::cin;
using std::cout;
using std::endl;
using std::string;


/***********************************************************************************************
** Description: This program can be run via the project1 executable generated by make.
***********************************************************************************************/
int main() {
  int requestedRows, requestedCols, startingRow, startingCol, requestedSteps;

  displayMenu();
  if (getIntChoiceFromPrompt("Select an available menu option.", 1 , 2) == 2) {
    return 0;
  }

  do {

    requestedRows = getIntChoiceFromPrompt("How many rows should there be on this board?", 1, 1000);
    requestedCols = getIntChoiceFromPrompt("How many columns should there be on this board?", 1, 1000);
    startingRow = getIntChoiceFromPrompt("Which row should the ant start in?\nNote: Row 0 is the top row.", 0, requestedRows-1);
    startingCol = getIntChoiceFromPrompt("Which column should the ant start in?\nNote: Column 0 is the left row.", 0, requestedCols-1);
    requestedSteps = getIntChoiceFromPrompt("How many steps should there be in this simulation?", 1, 10000);

    Board antBoard(requestedRows, requestedCols);
    Ant gameAnt(startingRow, startingCol, requestedSteps);
    antBoard.addAnt(&gameAnt);
    antBoard.simulate();
    displayMenu();

  } while (getIntChoiceFromPrompt("Select an available menu option.", 1 , 2) != 2);

  return 0;
}
